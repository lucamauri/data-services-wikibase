name: dss-deploy

services:
  # --------------------------------------------------
  # WIKIBASE SUITE SERVICES
  # --------------------------------------------------

  # To disable Elasticsearch and use default MediaWiki search functionality remove
  # the elasticsearch service, and the MW_ELASTIC_* vars from wikibase_variables
  # at the top of this file.
  elasticsearch:
    image: wikibase/elasticsearch:1
    restart: unless-stopped
    ports:
      - 9200:80
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - ./config/elasticsearch-init.sh:/usr/local/bin/elasticsearch-init.sh
    entrypoint: ["/usr/local/bin/elasticsearch-init.sh"]
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.elasticsearch.rule=Host(`${ELASTIC_HOST}`)"
      - "traefik.http.services.elasticsearch.loadbalancer.server.port=9200"
    environment:
      discovery.type: single-node
      ES_JAVA_OPTS: -Xms512m -Xmx512m -Dlog4j2.formatMsgNoLookups=true
    healthcheck:
      test: curl --silent --fail localhost:9200
      interval: 10s
      start_period: 2m

  wdqs:
    image: wikibase/wdqs:2
    command: /runBlazegraph.sh
    restart: unless-stopped
    # Set number of files ulimit high enough, otherwise blazegraph will abort with:
    # library initialization failed - unable to allocate file descriptor table - out of memory
    # Appeared on Docker 24.0.5, containerd 1.7.9, Linux 6.6.6, NixOS 23.11
    ulimits:
      nofile:
        soft: 32768
        hard: 32768
    volumes:
      - wdqs-data:/wdqs/data
    healthcheck:
      test: curl --silent --fail localhost:9999/bigdata/namespace/wdq/sparql
      interval: 10s
      start_period: 2m

  wdqs-updater:
    image: wikibase/wdqs:2
    command: /runUpdate.sh
    depends_on:
      wdqs:
        condition: service_healthy
    restart: unless-stopped
    # Set number of files ulimit high enough, otherwise blazegraph will abort with:
    # library initialization failed - unable to allocate file descriptor table - out of memory
    # Appeared on Docker 24.0.5, containerd 1.7.9, Linux 6.6.6, NixOS 23.11
    ulimits:
      nofile:
        soft: 32768
        hard: 32768
    volumes:
      - ./config/wdqs-updater-runUpdate.sh:/runUpdate.sh
    environment:
      WIKIBASE_SCHEME: ${WIKIBASE_SCHEME}
      WIKIBASE_HOST: ${WIKIBASE_HOST}
      WIKIBASE_API_PATH: ${WIKIBASE_API_PATH}
      WIKIBASE_CONCEPT_URI: ${WIKIBASE_SCHEME}://${WIKIBASE_HOST}/
      WIKIBASE_ENTITY_NAMESPACES: ${WIKIBASE_ENTITY_NAMESPACES}
      UPDATER_DELAY: ${UPDATER_DELAY}

  wdqs-proxy:
    image: wikibase/wdqs-proxy:1
    depends_on:
      wdqs:
        condition: service_healthy
    restart: unless-stopped

  wdqs-frontend:
    image: wikibase/wdqs-frontend:1
    depends_on:
      - wdqs-proxy
    restart: unless-stopped
    ports:
      - 8834:80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.wdqs-frontend.rule=Host(`${WDQS_FRONTEND_PUBLIC_HOST}`)"
      - "traefik.http.routers.wdqs-frontend.entrypoints=websecure"
      - "traefik.http.routers.wdqs-frontend.tls.certresolver=letsencrypt"
    environment:
      WDQS_HOST: wdqs-proxy
      WIKIBASE_NAME: ${WIKIBASE_NAME}
      WIKIBASE_SCHEME: ${WIKIBASE_SCHEME}
      WIKIBASE_HOST: ${WIKIBASE_HOST}
      WIKIBASE_LOGO: ${WIKIBASE_LOGO}
      WIKIBASE_FAVICON: ${WIKIBASE_FAVICON}
      WIKIBASE_COPYRIGHT: ${WIKIBASE_COPYRIGHT}
      WIKIBASE_API_PATH: ${WIKIBASE_API_PATH}
      WIKIBASE_EXAMPLES_PAGE_TITLE: ${WIKIBASE_EXAMPLES_PAGE_TITLE}
    volumes:
      - ./config/wdqs-frontend-custom-config.json:/templates/custom-config.json
      - ./config/wdqs-frontend-default.conf:/templates/default.conf
    healthcheck:
      test: curl --silent --fail localhost
      interval: 10s
      start_period: 2m

  quickstatements:
    image: wikibase/quickstatements:1
    restart: unless-stopped
    ports:
      - 8840:80
    volumes:
      - quickstatements-data:/quickstatements/data
      - ./config/quickstatements-config.json:/templates/config.json
      - ./config/quickstatements-favicon.ico:/var/www/html/quickstatements/public_html/favicon.ico
      - ./config/quickstatements-oauth.ini:/templates/oauth.ini
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.quickstatements.rule=Host(`${QUICKSTATEMENTS_PUBLIC_HOST}`)"
    environment:
      WIKIBASE_SCHEME: ${WIKIBASE_SCHEME}
      WIKIBASE_HOST: ${WIKIBASE_HOST}
      WIKIBASE_API_PATH: ${WIKIBASE_API_PATH}
      QUICKSTATEMENTS_PUBLIC_URL: https://${QUICKSTATEMENTS_PUBLIC_HOST}
      QUICKSTATEMENTS_HOST: quickstatements
      WIKIBASE_PUBLIC_URL: ${WIKIBASE_SCHEME}://${WIKIBASE_HOST}
      OAUTH_CONSUMER_KEY: ${OAUTH_CONSUMER_KEY}
      OAUTH_CONSUMER_SECRET: ${OAUTH_CONSUMER_SECRET}
      OAUTH_SCRIPT_PATH: ${OAUTH_SCRIPT_PATH}
      SITENAME: ${WIKIBASE_NAME}
    healthcheck:
      test: curl --silent --fail localhost
      interval: 10s
      start_period: 2m

  # --------------------------------------------------
  # REVERSE PROXY AND SSL SERVICES
  # --------------------------------------------------

  traefik:
    image: traefik:3.1
    command:
      # Basic setup
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      # http endpoint
      - "--entrypoints.web.address=:80"
      # https endpoint
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.asdefault"
      - "--entrypoints.websecure.http.tls.certresolver=letsencrypt"
      # http to https redirect
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      # ACME SSL certificate generation
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${MW_ADMIN_EMAIL}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      # Uncomment this line to only test ssl generation first, makes sure you don't run into letsencrypt rate limits
      # - "--certificatesresolvers.letsencrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - traefik-letsencrypt-data:/letsencrypt

volumes:
  # EXTRA WIKIBASE SUITE SERVICES DATA
  wdqs-data:
  elasticsearch-data:
  quickstatements-data:
  # REVERSE PROXY AND SSL SERVICES DATA
  traefik-letsencrypt-data:
